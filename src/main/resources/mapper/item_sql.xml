<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="item">
	<select id="selectItemGrpList" resultType="camel">
		/* item.selectItemGrpList */
		SELECT	item_grp_cd
		,		grp_nm 
		FROM	T_CO_ITEM_GRP
	</select>
	
	<sql id ="selectItemListSql">
		<if test="itemGrp != null and itemGrp != ''">
		AND		A.ITEM_GRP_CD = #{itemGrp}
		</if>
		<if test="useYn != null and useYn != ''">
		AND		A.USE_YN = #{useYn}
		</if>
		<choose>
			<when test="nonPopYn != null and nonPopYn != ''">
				<if test="itemCode != null and itemCode != ''">
		AND		A.ITEM_CODE LIKE CONCAT('%', #{itemCode}, '%')
				</if>
				<if test="itemCodeDetail != null and itemCodeDetail != ''">
		AND		A.ITEM_CODE  = #{itemCodeDetail}
				</if>
				<if test="itemName != null and itemName != ''">
		AND		A.ITEM_NAME LIKE CONCAT('%', #{itemName}, '%')
				</if>
			</when>
			<when test="dupCheck != null and dupCheck != ''">
				<if test="itemCode != null and itemCode != ''">
		AND		A.ITEM_CODE  = #{itemCode}
				</if>
			</when>
			<otherwise>
				<if test="itemName != null and itemName != ''">
		AND ( A.ITEM_CODE LIKE CONCAT('%', #{itemName}, '%') OR A.ITEM_NAME LIKE CONCAT('%', #{itemName}, '%'))
				</if>
			</otherwise>
		</choose>
	</sql>
	
	<select id="selectItemList" resultType="camel">
		/* item.selectItemList */
		SELECT	A.ITEM_CODE
		,		A.ITEM_NAME
		,	    C.ITEM_GRP_CD
		,		C.GRP_NM
		,		A.USE_YN
		,		B.USER_NAME AS CREATE_USER
		,		DATE_FORMAT(A.CREATE_DATE, '%Y-%m-%d %h:%m') AS CREATE_DATE
		FROM	T_CO_ITEM A
		LEFT OUTER JOIN T_CO_USER B
			ON	A.CREATE_USER = B.USER_ID
		INNER JOIN T_CO_ITEM_GRP C
			ON	A.ITEM_GRP_CD = C.ITEM_GRP_CD
		WHERE 1=1
		<include refid="selectItemListSql"/>
		ORDER BY A.ITEM_CODE
		<if test="size != null and size != ''">
		LIMIT ${offset}, ${size}
		</if>
	</select>
	
	<select id="selectItemList_count" resultType="int">
		/* item.selectItemList_count */
		SELECT	COUNT(*)
		FROM	T_CO_ITEM A
		LEFT OUTER JOIN T_CO_USER B
			ON	A.CREATE_USER = B.USER_ID
		INNER JOIN T_CO_ITEM_GRP C
			ON	A.ITEM_GRP_CD = C.ITEM_GRP_CD
		WHERE 1=1
		<include refid="selectItemListSql"/>
	</select>
	
	<insert id="insertItem">
		/* item.insertItem */
		INSERT INTO T_CO_ITEM (
					ITEM_CODE
			,		ITEM_NAME
			,		ITEM_GRP_CD
			,		USE_YN
			,		CREATE_USER
			,		CREATE_DATE
		) VALUES (
					#{itemCode}
			,		#{itemName}
			,		#{itemGrpCd}
			,		#{useYn}
			,		#{createUser}
			,		NOW()
		)
	
	</insert>
	
	<update id="updateItem">
		/* item.updateItem */
		UPDATE T_CO_ITEM
		SET	ITEM_NAME = #{itemName}
		,	ITEM_GRP_CD = #{itemGrpCd}
		,	USE_YN = #{useYn}
		WHERE ITEM_CODE = #{itemCode}
	</update>
</mapper>