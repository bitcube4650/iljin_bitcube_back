<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bidStatus">

	<select id="selectTBiInfoMatInfomation" resultType="camel">
		/* bidStatus.selectTBiInfoMatInfomation */
		SELECT
		${columns}
		FROM T_BI_INFO_MAT tbim
		where tbim.BI_NO = #{biNo}
	</select>
	
	<select id="selectEbidStatusList_count" resultType="int">
		/* bidStatus.selectEbidStatusList_count */
		SELECT COUNT(1) 
		FROM t_bi_info_mat tbim
		<if test="userAuth == '4'.toString()">
		INNER JOIN t_co_user_interrelated tcui 
			ON tbim.INTERRELATED_CUST_CODE = tcui.INTERRELATED_CUST_CODE 
			AND tcui.USER_ID = #{userId}
		</if>
		<include refid="selectEbidStatusList_sql" />
	</select>
	
	<select id="selectEbidStatusList" resultType="camel">
		/* bidStatus.selectEbidStatusList */
		SELECT	tbim.bi_no
		,		tbim.bi_name 
		,		DATE_FORMAT(tbim.est_close_date, '%Y-%m-%d %H:%i') AS est_close_date 
		,		tbim.bi_mode 
		,		tbim.ins_mode 
		,		CASE	WHEN tbim.ing_tag = 'A1' AND tbim.est_close_date <![CDATA[ < ]]> sysdate() 
							THEN '입찰공고(개찰대상)' 
							WHEN tbim.ing_tag = 'A1' 
							THEN '입찰공고' 
							WHEN tbim.ing_tag = 'A3' AND tbim.est_close_date <![CDATA[ < ]]> sysdate()  
							THEN '입찰공고(재)(개찰대상)' 
							WHEN tbim.ing_tag = 'A3' 
							THEN '입찰공고(재)' 
							ELSE '개찰' 
					END AS ing_tag 
		,		tcu1.user_name AS cuser 
		,		tcu1.user_email AS cuser_email 
		,		tcu2.user_name AS opener_id 
		,		tcu2.user_email AS opener_email 
		FROM t_bi_info_mat tbim 
		LEFT OUTER JOIN t_co_user tcu1 
			ON tbim.create_user = tcu1.user_id 
		LEFT OUTER JOIN t_co_user tcu2 
			ON tbim.est_opener = tcu2.user_id 
		<if test="userAuth == '4'.toString()">
		inner join t_co_user_interrelated tcui 
			on tbim.INTERRELATED_CUST_CODE = tcui.INTERRELATED_CUST_CODE 
			and tcui.USER_ID = #{userId}
		</if>
		<include refid="selectEbidStatusList_sql" />
		order by tbim.bi_no desc
		LIMIT ${offset}, ${pageSize}
	</select>
	
	<sql id="selectEbidStatusList_sql">
		WHERE 1=1
		<if test="bidNo != null and bidNo != ''">
		and tbim.bi_no like concat('%', #{bidNo}, '%')
		</if>
		<if test="bidName != null and bidName != ''">
		and tbim.bi_name like concat('%', #{bidName}, '%')
		</if>
		<choose>
			<when test="rebidYn and !dateOverYn and !openBidYn">
		and tbim.ing_tag in ( 'A1', 'A3' )
		and tbim.est_close_date <![CDATA[ > ]]> sysdate()
			</when>
			<when test="!rebidYn and dateOverYn and !openBidYn">
		and tbim.ing_tag in ( 'A1', 'A3' )
		and tbim.est_close_date <![CDATA[ < ]]> sysdate()
			</when>
			<when test="!rebidYn and !dateOverYn and openBidYn">
		and tbim.ing_tag in ( 'A2' )
			</when>
			<when test="rebidYn and dateOverYn and !openBidYn">
		and tbim.ing_tag in ( 'A1', 'A3' )
			</when>
			<when test="rebidYn and !dateOverYn and openBidYn">
		and ((	tbim.ing_tag in ( 'A1', 'A3' ) and tbim.est_close_date <![CDATA[ > ]]> sysdate() ) or tbim.ing_tag in ( 'A2' ))
			</when>
			<when test="!rebidYn and dateOverYn and openBidYn">
		and ((	tbim.ing_tag in ( 'A1', 'A3' ) and tbim.est_close_date <![CDATA[ < ]]> sysdate() ) or tbim.ing_tag in ( 'A2' ))
			</when>
			<otherwise>
		and tbim.ing_tag in ( 'A1', 'A2', 'A3' )
			</otherwise>
		</choose>
		<if test="userAuth != '1'.toString() and userAuth != '4'.toString()">
		and tbim.interrelated_cust_code = #{interrelatedCustCode}
		</if>
		<if test="userAuth != '1'.toString()">
		and ( tbim.create_user = #{userId} 
			or tbim.open_att1 = #{userId} 
			or tbim.open_att2 = #{userId} 
			or tbim.gongo_id = #{userId} 
			or tbim.est_bidder = #{userId} 
			or tbim.est_opener = #{userId} ) 
		</if>
	</sql>
	
	<select id="selectEbidStatusDetail" resultType="camel">
		/* bidStatus.selectEbidStatusDetail */
		select	tbim.BI_NO 
		,		tbim.BI_NAME 
		,		tci.ITEM_NAME 
		,		tbim.BI_MODE 
		,		tbim.BID_JOIN_SPEC 
		,		tbim.SPECIAL_COND 
		,		DATE_FORMAT(tbim.SPOT_DATE, '%Y-%m-%d %H:%i') as SPOT_DATE 
		,		tbim.SPOT_AREA 
		,		tcc.CODE_NAME as SUCC_DECI_METH 
		,		tbim.AMT_BASIS 
		,		tbim.PAY_COND 
		,		tbim.BD_AMT 
		,		tbim.CREATE_USER 
		,		tcu5.USER_NAME as DAMDANG_NAME 
		,		DATE_FORMAT(tbim.EST_START_DATE, '%Y-%m-%d %H:%i') as EST_START_DATE 
		,		DATE_FORMAT(tbim.EST_CLOSE_DATE, '%Y-%m-%d %H:%i') as EST_CLOSE_DATE 
		,		tbim.EST_CLOSE_DATE <![CDATA[ < ]]> sysdate() as EST_CLOSE_CHECK 
		,		tcu3.USER_NAME as EST_OPENER 
		,		tcu4.USER_NAME as EST_BIDDER 
		,		tcu.USER_NAME as GONGO_NAME 
		,		tcu1.USER_NAME as OPEN_ATT1 
		,		tcu2.USER_NAME as OPEN_ATT2 
		,		tbim.INS_MODE 
		,		tbim.SUPPLY_COND 
		,		tbim.WHY_A3 
		,		tbim.ING_TAG 
		,		tbim.INTERRELATED_CUST_CODE 
		,		codeMd.CODE_NAME as MAT_DEPT 
		,		codeMp.CODE_NAME as MAT_PROC 
		,		codeMc.CODE_NAME as MAT_CLS 
		,		tbim.MAT_FACTORY 
		,		tbim.MAT_FACTORY_LINE 
		,		tbim.MAT_FACTORY_CNT 
		,		tbim.OPEN_ATT1 as OPEN_ATT1_ID 
		,		tbim.OPEN_ATT2 as OPEN_ATT2_ID 
		,		CASE WHEN tbim.OPEN_ATT1 IS NOT NULL AND tbim.OPEN_ATT1 != '' THEN tbim.OPEN_ATT1_SIGN ELSE 'Y' END AS OPEN_ATT1_SIGN 
		,		CASE WHEN tbim.OPEN_ATT2 IS NOT NULL AND tbim.OPEN_ATT2 != '' THEN tbim.OPEN_ATT2_SIGN ELSE 'Y' END AS OPEN_ATT2_SIGN 
		,		tbim.EST_OPENER as EST_OPENER_ID 
		,		tbim.EST_BIDDER as EST_BIDDER_ID 
		,		tbim.GONGO_ID
		,		tbim.ITEM_CODE
		,		tbim.SUCC_DECI_METH AS SUCC_DECI_METH_CODE
		,		tbim.MAT_DEPT
		, 		tbim.MAT_PROC
		, 		tbim.MAT_CLS
		,		tbim.MAT_FACTORY
		, 		tbim.MAT_FACTORY_LINE 
		,		tbim.MAT_FACTORY_CNT  
		,		tcu.DEPT_NAME
		from t_bi_info_mat tbim 
		left outer join t_co_user tcu 
			on tbim.GONGO_ID = tcu.USER_ID 
		left outer join t_co_user tcu1 
			on tbim.OPEN_ATT1 = tcu1.USER_ID 
		left outer join t_co_user tcu2 
			on tbim.OPEN_ATT2 = tcu2.USER_ID 
		left outer join t_co_user tcu3 
			on tbim.EST_OPENER = tcu3.USER_ID 
		left outer join t_co_user tcu4 
			on tbim.EST_BIDDER = tcu4.USER_ID 
		left outer join t_co_user tcu5 
			on tbim.CREATE_USER = tcu5.USER_ID 
		left outer join t_co_item tci  
			on tbim.ITEM_CODE = tci.ITEM_CODE 
		left outer join t_co_code tcc  
			on tbim.SUCC_DECI_METH = tcc.CODE_VAL 
			and tcc.COL_CODE = 'T_CO_SUCC_METHOD' 
		left outer join t_co_code codeMd 
			on tbim.MAT_DEPT = codeMd.CODE_VAL 
			and codeMd.COL_CODE = 'MAT_DEPT' 
		left outer join t_co_code codeMp 
			on tbim.MAT_PROC = codeMp.CODE_VAL 
			and codeMp.COL_CODE = 'MAT_PROC' 
		left outer join t_co_code codeMc 
			on tbim.MAT_CLS = codeMc.CODE_VAL 
			and codeMc.COL_CODE = 'MAT_CLS' 
		WHERE tbim.BI_NO = #{biNo}
	</select>
	
	<select id="selectEbidStatusJoinCustList" resultType="camel">
		/* bidStatus.selectEbidStatusJoinCustList */
		select	tbimc.BI_NO 
		,		tbimc.CUST_CODE 
		,		tccm.CUST_NAME 
		,		tccm.PRES_NAME 
		,		tcc.CODE_NAME as ESMT_CURR 
		,		DATE_FORMAT(tbimc.SUBMIT_DATE, '%Y-%m-%d %H:%i') as SUBMIT_DATE 
		,		(select tccu.USER_NAME from t_co_cust_user tccu where tccu.CUST_CODE = tbimc.CUST_CODE AND tccu.USER_TYPE = '1' LIMIT 1) AS DAMDANG_NAME 
		,		tbimc.ESMT_YN 
		,		tbimc.ESMT_AMT 
		,		tbu.FILE_NM 
		,		tbu.FILE_PATH 
		,		tbimc.ETC_B_FILE as ETC_FILE 
		,		tbimc.ETC_B_FILE_PATH as ETC_PATH 
		, 		IFNULL(tbimc.usemail_id,'') AS usemail_id 
		from t_bi_info_mat_cust tbimc 
		inner join t_co_cust_master tccm 
			on tbimc.CUST_CODE = tccm.CUST_CODE 
		left outer join t_co_code tcc 
			on tcc.COL_CODE = 'T_CO_RATE' 
			and tbimc.ESMT_CURR = tcc.CODE_VAL 
		left outer join t_bi_upload tbu 
			on tbimc.FILE_ID = tbu.FILE_ID 
			and tbu.FILE_FLAG = 'C'
		where tbimc.BI_NO = #{biNo}
		order by field(tbimc.SUCC_YN, 'Y', 'N')
	</select>
	
	<select id="selectEbidStatusJoinCustSpec" resultType="camel">
		/* bidStatus.selectEbidStatusJoinCustSpec */
		select	cast(tbdmc.CUST_CODE as char) as CUST_CODE 
		,		tbsm.NAME 
		,		tbsm.SSIZE 
		,		tbsm.UNITCODE 
		,		tbsm.ORDER_QTY 
		,		tbdmc.ESMT_UC 
		from t_bi_detail_mat_cust tbdmc 
		inner join t_bi_spec_mat tbsm 
			on tbdmc.BI_NO = tbsm.BI_NO 
			and tbdmc.SEQ = tbsm.SEQ 
		where tbdmc.BI_NO = #{biNo}
		and tbdmc.CUST_CODE = #{custCode}
	</select>
	
	<select id="selectEbidStatusDetailFile" resultType="camel">
		/* bidStatus.selectEbidStatusDetailFile */
		select	tbu.FILE_FLAG 
		,		tbu.FILE_NM 
		,		tbu.FILE_PATH 
		,		tbu.FILE_ID
		from t_bi_upload tbu 
		where tbu.USE_YN = 'Y' 
		and tbu.FILE_FLAG in (<foreach collection="fileFlag" item="item" separator=",">#{item}</foreach>) 
		and tbu.BI_NO = #{biNo}
		order by field(tbu.FILE_FLAG, '1', '0', 'K')
	</select>
	
	<select id="selectEbidStatusDetailSpec" resultType="camel">
		/* bidStatus.selectEbidStatusDetailSpec */
		select	tbsm.NAME 
		,		tbsm.SSIZE 
		,		tbsm.UNITCODE 
		,		tbsm.ORDER_UC 
		,		tbsm.ORDER_QTY 
		,		tbsm.SEQ
		from t_bi_spec_mat tbsm 
		where tbsm.BI_NO = #{biNo}
		order by tbsm.SEQ
	</select>
	
	<update id="updateEbidStatus">
		/* bidStatus.updateEbidStatus */
		UPDATE	t_bi_info_mat 
		set	ing_tag = #{ingTag} 
		<if test="whyA7 != null and whyA7 != ''">
		,		why_a7 = #{whyA7}
		</if>
		,		update_date = sysdate() 
		,		update_user = #{userId} 
		WHERE bi_no = #{biNo}
	</update>
	
	<insert id="insertTBiInfoMatHist">
		/* bidStatus.insertTBiInfoMatHist */
		INSERT into t_bi_info_mat_hist (
		BI_NO, BI_NAME, BI_MODE, INS_MODE, BID_JOIN_SPEC, SPECIAL_COND, SUPPLY_COND, SPOT_DATE, SPOT_AREA, SUCC_DECI_METH, BID_OPEN_DATE, AMT_BASIS, 
		BD_AMT, SUCC_AMT, EST_START_DATE, EST_CLOSE_DATE, EST_OPENER, EST_BIDDER, EST_OPEN_DATE, OPEN_ATT1, OPEN_ATT1_SIGN, OPEN_ATT2, OPEN_ATT2_SIGN, 
		ING_TAG, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE, ITEM_CODE, GONGO_ID, PAY_COND, WHY_A3, WHY_A7, BI_OPEN, INTERRELATED_CUST_CODE, 
		REAL_AMT, ADD_ACCEPT, MAT_DEPT, MAT_PROC, MAT_CLS, MAT_FACTORY, MAT_FACTORY_LINE, MAT_FACTORY_CNT 
		) select 
		BI_NO, BI_NAME, BI_MODE, INS_MODE, BID_JOIN_SPEC, SPECIAL_COND, SUPPLY_COND, SPOT_DATE, SPOT_AREA, SUCC_DECI_METH, BID_OPEN_DATE, AMT_BASIS, 
		BD_AMT, SUCC_AMT, EST_START_DATE, EST_CLOSE_DATE, EST_OPENER, EST_BIDDER, EST_OPEN_DATE, OPEN_ATT1, OPEN_ATT1_SIGN, OPEN_ATT2, OPEN_ATT2_SIGN, 
		ING_TAG, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE, ITEM_CODE, GONGO_ID, PAY_COND, WHY_A3, WHY_A7, BI_OPEN, INTERRELATED_CUST_CODE, 
		REAL_AMT, ADD_ACCEPT, MAT_DEPT, MAT_PROC, MAT_CLS, MAT_FACTORY, MAT_FACTORY_LINE, MAT_FACTORY_CNT 
		from t_bi_info_mat tbim 
		where tbim.BI_NO = #{biNo}
	</insert>
	
	<insert id="insertTBiLog">
		/* bidStatus.insertTBiLog */
		INSERT INTO t_bi_log (
			bi_no,
			user_id, 
			log_text, 
			create_date
		) VALUES (
			#{biNo}, 
			#{userId}, 
			#{msg}, 
			sysdate()
		)
	</insert>
	
	<select id="selectEbidBiModeASendInfo" resultType="camel">
		/* bidStatus.selectEbidBiModeASendInfo */
		select	tccu.USER_EMAIL 
		,		a.from_email 
		from 
		( 
			select	jb.datas as user_id 
			,		tcu.user_email as from_email 
			from t_bi_info_mat_cust tbimc 
			inner join json_table( 
				replace(json_array(tbimc.USEMAIL_ID), ',', '","'), 
				'$[*]' columns (datas varchar(50) path '$') 
			) jb 
			inner join t_bi_info_mat tbim 
				on tbimc.bi_no = tbim.bi_no 
			left outer join t_co_user tcu 
				on tbim.create_user = tcu.user_id 
			where tbimc.bi_no = #{biNo} 
			and tbimc.esmt_yn = '2' 
		) a 
		inner join t_co_cust_user tccu 
			on a.user_id = tccu.user_id 
			and tccu.USE_YN = 'Y' 
		group by tccu.USER_EMAIL 
	</select>
	
	<select id="selectEbidBiModeBSendInfo" resultType="camel">
		/* bidStatus.selectEbidBiModeBSendInfo */
		select	tccu.user_email 
		,	tcu.user_email as from_email 
		from t_bi_info_mat_cust tbimc 
		inner join t_co_cust_master tccm 
			on tbimc.cust_code = tccm.cust_code 
		inner join t_co_cust_user tccu 
			on tccm.cust_code = tccu.cust_code 
			and tccu.USE_YN = 'Y' 
		inner join t_bi_info_mat tbim 
			on tbimc.bi_no = tbim.bi_no 
		left outer join t_co_user tcu 
			on tbim.create_user = tcu.user_id 
		where tbimc.bi_no = #{biNo} 
		and tbimc.esmt_yn = '2' 
	</select>
	
	<select id="selectDecryptEbidCustList" resultType="camel">
		/* bidStatus.selectDecryptEbidCustList */
		SELECT	tbimc.BI_NO 
		,		tbimc.CUST_CODE 
		,		tbimc.FILE_ID 
		,		tbimc.ENC_QUTN 
		,		tbimc.ENC_ESMT_SPEC 
		,		tbim.INS_MODE 
		,		tbimc.BI_ORDER 
		FROM	t_bi_info_mat_cust tbimc 
		INNER JOIN	t_bi_info_mat tbim 
			ON	tbimc.BI_NO = tbim.BI_NO 
		WHERE	tbimc.bi_no = #{biNo} 
		AND	tbimc.ESMT_YN = '2' 
		AND	tbimc.BI_ORDER = (select MAX(BI_ORDER) from t_bi_info_mat_cust where BI_NO = #{biNo}) 
	</select>
	
	<insert id="insertTBiDetailMatCust">
		/* bidStatus.insertTBiDetailMatCust */
		INSERT T_BI_DETAIL_MAT_CUST (
			BI_NO
		,	SEQ
		,	CUST_CODE
		,	ESMT_UC
		) VALUES (
			#{biNo}
		,	#{seq}
		,	#{custCode}
		,	#{esmtUc}
		)
	</insert>
	
	<insert id="insertTBiDetailMatCustTemp">
		/* bidStatus.insertTBiDetailMatCustTemp */
		INSERT T_BI_DETAIL_MAT_CUST_TEMP (
			BI_NO
		,	BI_ORDER
		,	SEQ
		,	CUST_CODE
		,	ESMT_UC
		) VALUES (
			#{biNo}
		,	#{biOrder}
		,	#{seq}
		,	#{custCode}
		,	#{esmtUc}
		)
	</insert>
	
	<update id="updateOpenCustTBiIfoMatCust">
		/* bidStatus.updateOpenCustTBiIfoMatCust */
		UPDATE	t_bi_info_mat_cust 
		set	ESMT_AMT = #{esmtAmt} 
		,		UPDATE_DATE = sysdate() 
		,		UPDATE_USER = #{userId} 
		WHERE bi_no = #{biNo} 
		AND CUST_CODE = #{custCode} 
	</update>
	
	<update id="updateOpenEbidTBiInfoMat">
		/* bidStatus.updateOpenEbidTBiInfoMat */
		UPDATE	t_bi_info_mat 
		set	ING_TAG = 'A2' 
		,		EST_OPEN_DATE = sysdate() 
		,		BI_OPEN = 'Y' 
		,		UPDATE_DATE = sysdate() 
		,		UPDATE_USER = #{userId} 
		WHERE bi_no = #{biNo} 
	</update>
	
	<update id="updateOpenEbidTBiInfoMatCust">
		/* bidStatus.updateOpenEbidTBiInfoMatCust */
		UPDATE	t_bi_info_mat_cust 
		set	ESMT_AMT = #{esmtAmt} 
		,		UPDATE_DATE = sysdate() 
		,		UPDATE_USER = #{userId} 
		WHERE bi_no = #{biNo} 
		AND CUST_CODE = #{custCode} 
	</update>
	
	<update id="updateEbidSuccessTBiInfoMat">
		/* bidStatus.updateEbidSuccessTBiInfoMat */
		UPDATE t_bi_info_mat 
		SET	ing_tag = 'A5'
		,	update_user = #{userId} 
		,	update_date = sysdate() 
		,	add_accept = #{succDetail} 
		,	succ_amt = (select ESMT_AMT from t_bi_info_mat_cust tbimc where BI_NO = #{biNo} and CUST_CODE = #{succCust}) 
		where bi_no = #{biNo} 
	</update>
	
	<update id="updateEbidSuccessTBiInfoMatCust">
		/* bidStatus.updateEbidSuccessTBiInfoMatCust */
		UPDATE t_bi_info_mat_cust 
		SET succ_yn ='Y'
		, update_user = #{userId}
		, update_date = sysdate() 
		where bi_no = #{biNo}
		and cust_code = #{succCust}
	</update>
	
	<update id="updateEbidSuccessTBiInfoMatCustTemp">
		/* bidStatus.updateEbidSuccessTBiInfoMatCustTemp */
		UPDATE t_bi_info_mat_cust_temp 
		SET succ_yn ='Y'
		, update_user = #{userId}
		, update_date = sysdate() 
		where bi_no = #{biNo}
		and cust_code = #{succCust}
	</update>
	
	<update id="updateRebidTBiInfoMat">
		/* bidStatus.updateRebidTBiInfoMat */
		UPDATE	t_bi_info_mat 
		SET		EST_CLOSE_DATE = #{estCloseDate} 
		,		WHY_A3 = #{whyA3} 
		,		ING_TAG = 'A3' 
		,		EST_OPEN_DATE = NULL 
		,		UPDATE_DATE = sysdate() 
		,		UPDATE_USER = #{userId} 
		,		OPEN_ATT1_SIGN = 'N' 
		,		OPEN_ATT2_SIGN = 'N' 
		,		BI_MODE = 'A' 
		,		BI_OPEN = 'N' 
		WHERE	bi_no = #{biNo}
	</update>
	
	<update id="updateRebidAttN">
		/* bidStatus.updateRebidAttN */
		UPDATE	t_bi_info_mat_cust 
		SET		REBID_ATT = 'N' 
		WHERE	BI_NO = #{biNo} 
	</update>
	
	<delete id="deleteTBiDetailMatCustCustCode">
		/* bidStatus.deleteTBiDetailMatCustCustCode */
		DELETE FROM t_bi_detail_mat_cust 
		WHERE BI_NO = #{biNo} 
		AND	CUST_CODE IN ( <foreach collection="reCustList" item="item" separator=",">#{item}</foreach> )
	</delete>
	
	<update id="updateRebidTBiInfoMatCustCustCode">
		/* bidStatus.updateRebidTBiInfoMatCustCustCode */
		UPDATE t_bi_info_mat_cust 
		SET		REBID_ATT = 'Y' 
		,		ESMT_YN = '0' 
		,		ESMT_CURR = NULL 
		,		ESMT_AMT = 0 
		,		ENC_QUTN = '0' 
		,		ENC_ESMT_SPEC = NULL 
		,		FILE_ID = NULL 
		,		SUBMIT_DATE = NULL 
		,		FILE_HASH_VALUE = NULL 
		,		UPDATE_USER = #{userId} 
		,		UPDATE_DATE = sysdate() 
		,		BI_ORDER = (select MAX(BI_ORDER)+1 from t_bi_info_mat_cust where BI_NO = #{biNo}) 
		WHERE	BI_NO = #{biNo} 
		AND		CUST_CODE IN ( <foreach collection="reCustList" item="item" separator=",">#{item}</foreach> )
	</update>
	
	<select id="selectEbidBiModeASendInfoCustList" resultType="camel">
		/* bidStatus.selectEbidBiModeASendInfoCustList */
		select	tccu.USER_EMAIL 
		,		a.from_email 
		,		REGEXP_REPLACE(tccu.USER_HP , '[^0-9]+', '') as USER_HP 
		,		tccu.USER_NAME 
		from 
		( 
			select	jb.datas as user_id 
			,		tcu.USER_EMAIL as from_email 
			from t_bi_info_mat_cust tbimc 
			inner join json_table( 
				replace(json_array(tbimc.USEMAIL_ID), ',', '","'), 
				'$[*]' columns (datas varchar(50) path '$') 
			) jb 
			inner join t_bi_info_mat tbim 
				on tbimc.bi_no = tbim.bi_no 
			left outer join t_co_user tcu 
				on tbim.create_user = tcu.user_id 
			where tbimc.bi_no = #{biNo} 
			and tbimc.cust_code IN ( <foreach collection="custList" item="item" separator=",">#{item}</foreach> )
		) a 
		inner join t_co_cust_user tccu 
			on a.user_id = tccu.user_id 
			and tccu.USE_YN = 'Y' 
		group by tccu.USER_EMAIL 
	</select>
	
	<select id="selectEbidBiModeBSendInfoCustList" resultType="camel">
		/* bidStatus.selectEbidBiModeBSendInfoCustList */
		select	tccu.user_email 
		,	tcu.user_email as from_email 
		,	REGEXP_REPLACE(tccu.USER_HP , '[^0-9]+', '') as USER_HP 
		,	tccu.USER_NAME 
		from t_bi_info_mat_cust tbimc 
		inner join t_co_cust_master tccm 
			on tbimc.cust_code = tccm.cust_code 
		inner join t_co_cust_user tccu 
			on tccm.cust_code = tccu.cust_code 
			and tccu.USE_YN = 'Y' 
		inner join t_bi_info_mat tbim 
			on tbimc.bi_no = tbim.bi_no 
		left outer join t_co_user tcu 
			on tbim.create_user = tcu.user_id 
		where tbimc.bi_no = #{biNo}
		and tccu.CUST_CODE IN ( <foreach collection="custList" item="item" separator=",">#{item}</foreach> )
	</select>
	
	<insert id="insertTBiInfoMatCustTemp">
		/* bidStatus.insertTBiInfoMatCustTemp */
		insert into t_bi_info_mat_cust_temp( 
		BI_NO, CUST_CODE, BI_ORDER, REBID_ATT, ESMT_YN, ESMT_AMT, SUCC_YN 
		, ENC_QUTN, ENC_ESMT_SPEC, FILE_ID, SUBMIT_DATE, CREATE_USER, CREATE_DATE 
		, UPDATE_USER, UPDATE_DATE, ESMT_CURR, ETC_B_FILE, FILE_HASH_VALUE, ETC_B_FILE_PATH, USEMAIL_ID 
		) select  
		BI_NO, CUST_CODE, BI_ORDER, REBID_ATT, ESMT_YN, ESMT_AMT, SUCC_YN 
		, ENC_QUTN, ENC_ESMT_SPEC, FILE_ID, SUBMIT_DATE, CREATE_USER, CREATE_DATE 
		, UPDATE_USER, UPDATE_DATE, ESMT_CURR, ETC_B_FILE, FILE_HASH_VALUE, ETC_B_FILE_PATH, USEMAIL_ID 
		from t_bi_info_mat_cust tbimc 
		where tbimc.BI_NO = #{biNo} 
		and tbimc.CUST_CODE = #{custCode} 
	</insert>
	
	<select id="selectTBiInfoMatCustTempCustCode_count" resultType="int">
		/* bidStatus.selectTBiInfoMatCustTempCustCode_count */
		SELECT count(1) 
		from t_bi_info_mat_cust_temp 
		where bi_no = #{biNo} 
		and cust_code = #{custCode} 
	</select>
	
	<select id="selectTBiInfoMatCustTempCustCode" resultType="camel">
		/* bidStatus.selectTBiInfoMatCustTempCustCode */
		SELECT	tbimct.bi_order 
		,		tbimct.esmt_curr 
		,		tbimct.esmt_amt 
		,		DATE_FORMAT(tbimct.submit_date, '%Y-%m-%d %H:%i') AS submit_date 
		from t_bi_info_mat_cust_temp tbimct 
		left outer join t_co_code tcc 
			on tcc.COL_CODE = 'T_CO_RATE' 
			and tbimct.ESMT_CURR = tcc.CODE_VAL 
		where tbimct.bi_no = #{biNo} 
		and tbimct.cust_code = #{custCode} 
		order by tbimct.bi_order asc 
		LIMIT ${offset}, ${pageSize}
	</select>
	
	<update id="updateOpenAttSign">
		/* bidStatus.updateOpenAttSign */
		UPDATE t_bi_info_mat 
		SET
		<choose>
			<when test="whoAtt == '1'.toString()">
		OPEN_ATT1_SIGN = 'Y'
			</when>
			<otherwise>
		OPEN_ATT2_SIGN = 'Y'
			</otherwise>
		</choose>
		WHERE BI_NO = #{biNo} 
	</update>
	
	<select id="selectPartnerEbidStatusList_count" resultType="int">
		/* bidStatus.selectPartnerEbidStatusList_count */
		select count(1) 
		from t_bi_info_mat tbim 
		inner join t_co_cust_ir tcci 
			on tbim.INTERRELATED_CUST_CODE = tcci.INTERRELATED_CUST_CODE 
			and tcci.CUST_CODE = #{custCode} 
		left outer join t_bi_info_mat_cust tbimc 
			on tbim.BI_NO = tbimc.BI_NO 
			and tbimc.CUST_CODE = #{custCode}
		<include refid="selectPartnerEbidStatusList_sql" /> 
	</select>
	
	<select id="selectPartnerEbidStatusList" resultType="camel">
		/* bidStatus.selectPartnerEbidStatusList */
		select	tbim.BI_NO 
		,		tbim.BI_NAME 
		,		DATE_FORMAT(tbim.EST_START_DATE, '%Y-%m-%d %H:%i') AS est_start_date 
		,		DATE_FORMAT(tbim.EST_CLOSE_DATE, '%Y-%m-%d %H:%i') AS est_close_date 
		,		tbim.BI_MODE 
		,		tbim.ING_TAG 
		,		tbim.INS_MODE 
		,		tcu.USER_NAME as DAMDANG_NAME 
		,		tcu.USER_EMAIL as DAMDANG_EMAIL 
		,		tbimc.ESMT_YN 
		,		tbimc.REBID_ATT 
		from t_bi_info_mat tbim 
		inner join t_co_cust_ir tcci 
			on tbim.INTERRELATED_CUST_CODE = tcci.INTERRELATED_CUST_CODE 
			and tcci.CUST_CODE = #{custCode} 
		left outer join t_bi_info_mat_cust tbimc 
			on tbim.BI_NO = tbimc.BI_NO 
			and tbimc.CUST_CODE = #{custCode} 
		left outer join t_co_user tcu 
			on tbim.CREATE_USER = tcu.USER_ID 
		<include refid="selectPartnerEbidStatusList_sql" />
		order by tbim.EST_START_DATE desc
		LIMIT ${offset}, ${pageSize}
	</select>
	
	<sql id="selectPartnerEbidStatusList_sql">
		where 1=1
		and (tbim.BI_MODE = 'B' OR (tbim.BI_MODE = 'A' AND tbimc.CUST_CODE = #{custCode}))
		<if test="bidNo != null and bidNo != ''">
		and tbim.BI_NO like concat('%',#{bidNo},'%')
		</if>
		<if test="bidName != null and bidName != ''">
		and tbim.BI_NAME like concat('%',#{bidName},'%')
		</if>
		<choose>
			<when test="bidModeA and !bidModeB">
		and tbim.BI_MODE = 'A'
			</when>
			<when test="!bidModeA and bidModeB">
		and tbim.BI_MODE = 'B' 
			</when>
			<otherwise>
		and tbim.BI_MODE IN ('A', 'B')
			</otherwise>
		</choose>
		<choose>
			<when test="esmtYnN and !esmtYnY">
		and tbim.ING_TAG IN ('A1', 'A2', 'A3') 
		and (tbimc.ESMT_YN IS NULL or tbimc.ESMT_YN IN ('0', '1')) 
			</when>
			<when test="!esmtYnN and esmtYnY">
		and tbim.ING_TAG IN ('A1', 'A2', 'A3') 
		and tbimc.ESMT_YN IN ('2') 
			</when>
			<otherwise>
		and tbim.ING_TAG IN ('A1', 'A2', 'A3')
			</otherwise>
		</choose>
	</sql>
	
	<insert id="updateEbidTBiInfoMatCustConfirm">
		/* bidStatus.updateEbidTBiInfoMatCustConfirm */
		UPDATE T_BI_INFO_MAT_CUST
		SET	ESMT_YN = '1'
		,	ESMT_AMT = NULL
		,	SUCC_YN = 'N'
		,	UPDATE_USER = #{userId}
		,	UPDATE_DATE = NOW()
		,	SUBMIT_DATE = NULL
		,	FILE_ID = NULL
		,	ENC_QUTN = NULL
		,	ENC_ESMT_SPEC = NULL
		,	FILE_HASH_VALUE = NULL
		,	ETC_B_FILE = NULL
		,	ETC_B_FILE_PATH = NULL
		WHERE BI_NO = #{biNo}
		and CUST_CODE = #{custCode}
		AND (ESMT_YN IS NULL OR ESMT_YN = '0' OR ESMT_YN = '')
	</insert>
	
	<select id="selectPartnerEbidStatusDetail" resultType="camel">
		/* bidStatus.selectPartnerEbidStatusDetail */
		select	tbim.BI_NO 
		,		tbim.BI_NAME 
		,		tci.ITEM_NAME 
		,		tbim.BI_MODE 
		,		tcc.CODE_NAME as SUCC_DECI_METH 
		,		tbim.BID_JOIN_SPEC 
		,		DATE_FORMAT(tbim.SPOT_DATE, '%Y-%m-%d %H:%i') as SPOT_DATE 
		,		tbim.SPOT_AREA 
		,		tbim.SPECIAL_COND 
		,		tbim.SUPPLY_COND 
		,		tbim.AMT_BASIS 
		,		tbim.PAY_COND 
		,		tcu.USER_NAME as DAMDANG_NAME 
		,		tcu.DEPT_NAME
		,		tbim.WHY_A3 
		,		tbim.WHY_A7 
		,		DATE_FORMAT(tbim.EST_START_DATE, '%Y-%m-%d %H:%i') as EST_START_DATE 
		,		DATE_FORMAT(tbim.EST_CLOSE_DATE, '%Y-%m-%d %H:%i') as EST_CLOSE_DATE 
		,		tbim.INS_MODE 
		,		tbim.ADD_ACCEPT 
		,		tbim.ING_TAG 
		,		IFNULL((select REBID_ATT from t_bi_info_mat_cust tbimc where tbimc.BI_NO = #{biNo} and tbimc.CUST_CODE = #{custCode}), 'N') as CUST_REBID_YN 
		,		IFNULL((select ESMT_YN from t_bi_info_mat_cust tbimc where tbimc.BI_NO = #{biNo} and tbimc.CUST_CODE = #{custCode}), '1') as CUST_ESMT_YN 
		,		IFNULL((select DATE_FORMAT(tbimc.SUBMIT_DATE, '%Y-%m-%d %H:%i') from t_bi_info_mat_cust tbimc where tbimc.BI_NO = #{biNo} and tbimc.CUST_CODE = #{custCode}), '') as CUST_ESMT_UPDATE_DATE 
		from t_bi_info_mat tbim 
		left outer join t_co_user tcu 
			on tbim.CREATE_USER = tcu.USER_ID 
		left outer join t_co_item tci  
			on tbim.ITEM_CODE = tci.ITEM_CODE 
		left outer join t_co_code tcc  
			on tbim.SUCC_DECI_METH = tcc.CODE_VAL 
			and tcc.COL_CODE = 'T_CO_SUCC_METHOD'
		where tbim.BI_NO = #{biNo}
	</select>
	
	<select id="selectCodeRateList" resultType="camel">
		/* bidStatus.selectCodeRateList */
		SELECT	code_val
		,		code_name
		from t_co_code 
		where col_code = 'T_CO_RATE' 
		order by SORT_NO asc
	</select>
	
	<insert id="mergedTBiInfoMatCust">
		/* bidStatus.mergedTBiInfoMatCust */
		INSERT INTO T_BI_INFO_MAT_CUST(
			BI_NO
		,	CUST_CODE
		,	ESMT_YN
		,	SUBMIT_DATE
		,	CREATE_USER
		,	UPDATE_USER
		,	UPDATE_DATE
		,	ENC_QUTN
		,	REBID_ATT
		,	BI_ORDER
		,	ESMT_CURR
		,	ETC_B_FILE
		,	ETC_B_FILE_PATH
		<choose>
			<when test="insModeCode == '1'.toString()">
		,	FILE_ID
			</when>
			<otherwise>
		,	ENC_ESMT_SPEC
			</otherwise>
		</choose>
		) VALUES (
			#{biNo}
		,	#{custCode}
		,	'2'
		,	NOW()
		,	#{userId}
		,	#{userId}
		,	NOW()
		,	#{amt}
		,	'N'
		,	'1'
		,	#{esmtCurr}
		,	#{etcFileName}
		,	#{etcFilePath}
		<choose>
			<when test="insModeCode == '1'.toString()">
		,	#{fileId}
			</when>
			<otherwise>
		,	#{amt}
			</otherwise>
		</choose>
		)ON DUPLICATE KEY UPDATE
			ESMT_YN = '2'
		,	SUBMIT_DATE = NOW()
		,	UPDATE_USER = #{userId}
		,	UPDATE_DATE = NOW()
		,	ENC_QUTN = #{amt}
		,	ESMT_CURR = #{esmtCurr}
		,	ETC_B_FILE = #{etcFileName}
		,	ETC_B_FILE_PATH = #{etcFilePath}
		<choose>
			<when test="insModeCode == '1'.toString()">
		,	FILE_ID = #{fileId}
			</when>
			<otherwise>
		,	ENC_ESMT_SPEC = #{amt}
			</otherwise>
		</choose>
	</insert>
	
	<insert id="insertTBiUploadC" useGeneratedKeys="true" keyProperty="fileId">
		/* bidStatus.insertTBiUploadC */
		INSERT INTO T_BI_UPLOAD(
			BI_NO
		,	FILE_FLAG
		,	F_CUST_CODE
		,	FILE_NM
		,	FILE_PATH
		,	CREATE_DATE
		,	USE_YN
		) VALUES (
			#{biNo}
		,	'C'
		,	#{custCode}
		,	#{fileNm}
		,	#{filePath}
		,	NOW()
		,	'Y'
		)
	</insert>
</mapper>